strict digraph "Dictionary<Key, Value where Key : Hashable> - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "Collection" [URL="/protocol/Collection/hierarchy/"]
    "CustomDebugStringConvertible" [URL="/protocol/CustomDebugStringConvertible/hierarchy/"]
    "CustomReflectable" [URL="/protocol/CustomReflectable/hierarchy/"]
    "CustomStringConvertible" [URL="/protocol/CustomStringConvertible/hierarchy/"]
    "Dictionary<Key, Value where Key : Hashable>" [URL="/type/Dictionary/", style="filled", fillcolor="#ee543d", color="#ee543d"]
    "ExpressibleByDictionaryLiteral" [URL="/protocol/ExpressibleByDictionaryLiteral/hierarchy/"]
    "Sequence" [URL="/protocol/Sequence/hierarchy/"]    "Collection" -> "Dictionary<Key, Value where Key : Hashable>"
    "ExpressibleByDictionaryLiteral" -> "Dictionary<Key, Value where Key : Hashable>"
    "CustomStringConvertible" -> "Dictionary<Key, Value where Key : Hashable>"
    "CustomDebugStringConvertible" -> "Dictionary<Key, Value where Key : Hashable>"
    "CustomReflectable" -> "Dictionary<Key, Value where Key : Hashable>"
    "Sequence" -> "Collection"
    subgraph Types {
        rank = max; "Dictionary<Key, Value where Key : Hashable>";
    }
}