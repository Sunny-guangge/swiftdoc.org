strict digraph "Double - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "AbsoluteValuable" [URL="/protocol/AbsoluteValuable/hierarchy/"]
    "Arithmetic" [URL="/protocol/Arithmetic/hierarchy/"]
    "BinaryFloatingPoint" [URL="/protocol/BinaryFloatingPoint/hierarchy/"]
    "Comparable" [URL="/protocol/Comparable/hierarchy/"]
    "CustomDebugStringConvertible" [URL="/protocol/CustomDebugStringConvertible/hierarchy/"]
    "CustomPlaygroundQuickLookable" [URL="/protocol/CustomPlaygroundQuickLookable/hierarchy/"]
    "CustomReflectable" [URL="/protocol/CustomReflectable/hierarchy/"]
    "CustomStringConvertible" [URL="/protocol/CustomStringConvertible/hierarchy/"]
    "Double" [URL="/type/Double/", style="filled", fillcolor="#ee543d", color="#ee543d"]
    "Equatable" [URL="/protocol/Equatable/hierarchy/"]
    "ExpressibleByFloatLiteral" [URL="/protocol/ExpressibleByFloatLiteral/hierarchy/"]
    "ExpressibleByIntegerLiteral" [URL="/protocol/ExpressibleByIntegerLiteral/hierarchy/"]
    "FloatingPoint" [URL="/protocol/FloatingPoint/hierarchy/"]
    "Hashable" [URL="/protocol/Hashable/hierarchy/"]
    "LosslessStringConvertible" [URL="/protocol/LosslessStringConvertible/hierarchy/"]
    "SignedNumber" [URL="/protocol/SignedNumber/hierarchy/"]
    "Strideable" [URL="/protocol/Strideable/hierarchy/"]    "LosslessStringConvertible" -> "Double"
    "CustomDebugStringConvertible" -> "Double"
    "BinaryFloatingPoint" -> "Double"
    "Hashable" -> "Double"
    "CustomReflectable" -> "Double"
    "CustomPlaygroundQuickLookable" -> "Double"
    "CustomStringConvertible" -> "LosslessStringConvertible"
    "FloatingPoint" -> "BinaryFloatingPoint"
    "ExpressibleByFloatLiteral" -> "BinaryFloatingPoint"
    "Arithmetic" -> "FloatingPoint"
    "AbsoluteValuable" -> "FloatingPoint"
    "Strideable" -> "FloatingPoint"
    "Equatable" -> "Arithmetic"
    "ExpressibleByIntegerLiteral" -> "Arithmetic"
    "SignedNumber" -> "AbsoluteValuable"
    "Comparable" -> "SignedNumber"
    "ExpressibleByIntegerLiteral" -> "SignedNumber"
    "Equatable" -> "Comparable"
    "Comparable" -> "Strideable"
    "Equatable" -> "Comparable"
    "Equatable" -> "Hashable"
    subgraph Types {
        rank = max; "Double";
    }
}