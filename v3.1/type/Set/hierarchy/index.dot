strict digraph "Set<Element where Element : Hashable> - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "Collection" [URL="/protocol/Collection/hierarchy/"]
    "CustomDebugStringConvertible" [URL="/protocol/CustomDebugStringConvertible/hierarchy/"]
    "CustomReflectable" [URL="/protocol/CustomReflectable/hierarchy/"]
    "CustomStringConvertible" [URL="/protocol/CustomStringConvertible/hierarchy/"]
    "Equatable" [URL="/protocol/Equatable/hierarchy/"]
    "ExpressibleByArrayLiteral" [URL="/protocol/ExpressibleByArrayLiteral/hierarchy/"]
    "Hashable" [URL="/protocol/Hashable/hierarchy/"]
    "Sequence" [URL="/protocol/Sequence/hierarchy/"]
    "Set<Element where Element : Hashable>" [URL="/type/Set/", style="filled", fillcolor="#ee543d", color="#ee543d"]
    "SetAlgebra" [URL="/protocol/SetAlgebra/hierarchy/"]    "SetAlgebra" -> "Set<Element where Element : Hashable>"
    "Hashable" -> "Set<Element where Element : Hashable>"
    "Collection" -> "Set<Element where Element : Hashable>"
    "CustomStringConvertible" -> "Set<Element where Element : Hashable>"
    "CustomDebugStringConvertible" -> "Set<Element where Element : Hashable>"
    "CustomReflectable" -> "Set<Element where Element : Hashable>"
    "Equatable" -> "SetAlgebra"
    "ExpressibleByArrayLiteral" -> "SetAlgebra"
    "Equatable" -> "Hashable"
    "Sequence" -> "Collection"
    subgraph Types {
        rank = max; "Set<Element where Element : Hashable>";
    }
}