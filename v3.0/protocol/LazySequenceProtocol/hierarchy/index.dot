strict digraph "LazySequenceProtocol - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "LazyBidirectionalCollection" [URL="/type/LazyBidirectionalCollection/hierarchy/", style=filled]
    "LazyCollection" [URL="/type/LazyCollection/hierarchy/", style=filled]
    "LazyCollectionProtocol" [URL="/protocol/LazyCollectionProtocol/hierarchy/"]
    "LazyFilterBidirectionalCollection" [URL="/type/LazyFilterBidirectionalCollection/hierarchy/", style=filled]
    "LazyFilterCollection" [URL="/type/LazyFilterCollection/hierarchy/", style=filled]
    "LazyFilterSequence" [URL="/type/LazyFilterSequence/hierarchy/", style=filled]
    "LazyMapBidirectionalCollection" [URL="/type/LazyMapBidirectionalCollection/hierarchy/", style=filled]
    "LazyMapCollection" [URL="/type/LazyMapCollection/hierarchy/", style=filled]
    "LazyMapRandomAccessCollection" [URL="/type/LazyMapRandomAccessCollection/hierarchy/", style=filled]
    "LazyMapSequence" [URL="/type/LazyMapSequence/hierarchy/", style=filled]
    "LazyRandomAccessCollection" [URL="/type/LazyRandomAccessCollection/hierarchy/", style=filled]
    "LazySequence" [URL="/type/LazySequence/hierarchy/", style=filled]
    "LazySequenceProtocol" [URL="/protocol/LazySequenceProtocol/", style="filled,rounded", fillcolor="#ee543d", color="#ee543d"]
    "Sequence" [URL="/protocol/Sequence/hierarchy/"]    "LazySequenceProtocol" -> "LazyCollectionProtocol"
    "LazySequenceProtocol" -> "LazyFilterSequence"
    "LazySequenceProtocol" -> "LazyMapSequence"
    "LazySequenceProtocol" -> "LazySequence"
    "LazyCollectionProtocol" -> "LazyBidirectionalCollection"
    "LazyCollectionProtocol" -> "LazyCollection"
    "LazyCollectionProtocol" -> "LazyFilterBidirectionalCollection"
    "LazyCollectionProtocol" -> "LazyFilterCollection"
    "LazyCollectionProtocol" -> "LazyMapBidirectionalCollection"
    "LazyCollectionProtocol" -> "LazyMapCollection"
    "LazyCollectionProtocol" -> "LazyMapRandomAccessCollection"
    "LazyCollectionProtocol" -> "LazyRandomAccessCollection"
    "Sequence" -> "LazySequenceProtocol"
    subgraph Types {
        rank = max; "LazyFilterSequence"; "LazyMapSequence"; "LazySequence"; "LazyBidirectionalCollection"; "LazyCollection"; "LazyFilterBidirectionalCollection"; "LazyFilterCollection"; "LazyMapBidirectionalCollection"; "LazyMapCollection"; "LazyMapRandomAccessCollection"; "LazyRandomAccessCollection";
    }
}