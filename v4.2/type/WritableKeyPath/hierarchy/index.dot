strict digraph "WritableKeyPath<Root, Value> - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "AnyKeyPath" [URL="/type/AnyKeyPath/hierarchy/", style=filled]
    "Equatable" [URL="/protocol/Equatable/hierarchy/"]
    "Hashable" [URL="/protocol/Hashable/hierarchy/"]
    "KeyPath" [URL="/type/KeyPath/hierarchy/", style=filled]
    "PartialKeyPath" [URL="/type/PartialKeyPath/hierarchy/", style=filled]
    "ReferenceWritableKeyPath" [URL="/type/ReferenceWritableKeyPath/hierarchy/", style=filled]
    "WritableKeyPath<Root, Value>" [URL="/type/WritableKeyPath/", style="filled", fillcolor="#ee543d", color="#ee543d"]
    "_AppendKeyPath" [URL="/protocol/_AppendKeyPath/hierarchy/"]    "WritableKeyPath<Root, Value>" -> "ReferenceWritableKeyPath"
    "KeyPath" -> "WritableKeyPath<Root, Value>"
    "PartialKeyPath" -> "KeyPath"
    "AnyKeyPath" -> "PartialKeyPath"
    "Hashable" -> "AnyKeyPath"
    "_AppendKeyPath" -> "AnyKeyPath"
    "Equatable" -> "Hashable"
    subgraph Types {
        rank = max; "WritableKeyPath<Root, Value>"; "ReferenceWritableKeyPath"; "KeyPath"; "PartialKeyPath"; "AnyKeyPath";
    }
}